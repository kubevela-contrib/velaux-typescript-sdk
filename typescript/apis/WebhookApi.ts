/* tslint:disable */
/* eslint-disable */
/**
 * Kubevela api doc
 * Kubevela api doc
 *
 * The version of the OpenAPI document: v1beta1
 * Contact: feedback@mail.kubevela.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  BcodeBcode,
  V1ApplicationDeployResponse,
  V1HandleApplicationTriggerWebhookRequest,
} from '../models/index';
import {
    BcodeBcodeFromJSON,
    BcodeBcodeToJSON,
    V1ApplicationDeployResponseFromJSON,
    V1ApplicationDeployResponseToJSON,
    V1HandleApplicationTriggerWebhookRequestFromJSON,
    V1HandleApplicationTriggerWebhookRequestToJSON,
} from '../models/index';

export interface HandleApplicationWebhookRequest {
    token: string;
    body: V1HandleApplicationTriggerWebhookRequest;
}

/**
 *
 */
export class WebhookApi extends runtime.BaseAPI {

    /**
     * handle application webhook request
     */
    async handleApplicationWebhookRaw(requestParameters: HandleApplicationWebhookRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<V1ApplicationDeployResponse>> {
        if (requestParameters.token === null || requestParameters.token === undefined) {
            throw new runtime.RequiredError('token','Required parameter requestParameters.token was null or undefined when calling handleApplicationWebhook.');
        }

        if (requestParameters.body === null || requestParameters.body === undefined) {
            throw new runtime.RequiredError('body','Required parameter requestParameters.body was null or undefined when calling handleApplicationWebhook.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/v1/webhook/{token}`.replace(`{${"token"}}`, encodeURIComponent(String(requestParameters.token))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: V1HandleApplicationTriggerWebhookRequestToJSON(requestParameters.body),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => V1ApplicationDeployResponseFromJSON(jsonValue));
    }

    /**
     * handle application webhook request
     */
    async handleApplicationWebhook(requestParameters: HandleApplicationWebhookRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<V1ApplicationDeployResponse> {
        const response = await this.handleApplicationWebhookRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
