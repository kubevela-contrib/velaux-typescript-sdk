/* tslint:disable */
/* eslint-disable */
/**
 * Kubevela api doc
 * Kubevela api doc
 *
 * The version of the OpenAPI document: v1beta1
 * Contact: feedback@mail.kubevela.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface V1CreateCloudClusterRequest
 */
export interface V1CreateCloudClusterRequest {
    /**
     * 
     * @type {string}
     * @memberof V1CreateCloudClusterRequest
     */
    accessKeyID: string;
    /**
     * 
     * @type {string}
     * @memberof V1CreateCloudClusterRequest
     */
    accessKeySecret: string;
    /**
     * 
     * @type {number}
     * @memberof V1CreateCloudClusterRequest
     */
    cpuCoresPerWorker: number;
    /**
     * 
     * @type {number}
     * @memberof V1CreateCloudClusterRequest
     */
    memoryPerWorker: number;
    /**
     * 
     * @type {string}
     * @memberof V1CreateCloudClusterRequest
     */
    name: string;
    /**
     * 
     * @type {number}
     * @memberof V1CreateCloudClusterRequest
     */
    workerNumber: number;
    /**
     * 
     * @type {string}
     * @memberof V1CreateCloudClusterRequest
     */
    zone: string;
}

/**
 * Check if a given object implements the V1CreateCloudClusterRequest interface.
 */
export function instanceOfV1CreateCloudClusterRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "accessKeyID" in value;
    isInstance = isInstance && "accessKeySecret" in value;
    isInstance = isInstance && "cpuCoresPerWorker" in value;
    isInstance = isInstance && "memoryPerWorker" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "workerNumber" in value;
    isInstance = isInstance && "zone" in value;

    return isInstance;
}

export function V1CreateCloudClusterRequestFromJSON(json: any): V1CreateCloudClusterRequest {
    return V1CreateCloudClusterRequestFromJSONTyped(json, false);
}

export function V1CreateCloudClusterRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1CreateCloudClusterRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'accessKeyID': json['accessKeyID'],
        'accessKeySecret': json['accessKeySecret'],
        'cpuCoresPerWorker': json['cpuCoresPerWorker'],
        'memoryPerWorker': json['memoryPerWorker'],
        'name': json['name'],
        'workerNumber': json['workerNumber'],
        'zone': json['zone'],
    };
}

export function V1CreateCloudClusterRequestToJSON(value?: V1CreateCloudClusterRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'accessKeyID': value.accessKeyID,
        'accessKeySecret': value.accessKeySecret,
        'cpuCoresPerWorker': value.cpuCoresPerWorker,
        'memoryPerWorker': value.memoryPerWorker,
        'name': value.name,
        'workerNumber': value.workerNumber,
        'zone': value.zone,
    };
}

