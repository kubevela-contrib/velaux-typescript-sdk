/* tslint:disable */
/* eslint-disable */
/**
 * Kubevela api doc
 * Kubevela api doc
 *
 * The version of the OpenAPI document: v1beta1
 * Contact: feedback@mail.kubevela.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CommonHTTPOption
 */
export interface CommonHTTPOption {
    /**
     * 
     * @type {string}
     * @memberof CommonHTTPOption
     */
    caFile?: string;
    /**
     * 
     * @type {string}
     * @memberof CommonHTTPOption
     */
    certFile?: string;
    /**
     * 
     * @type {boolean}
     * @memberof CommonHTTPOption
     */
    insecureSkipTLS?: boolean;
    /**
     * 
     * @type {string}
     * @memberof CommonHTTPOption
     */
    keyFile?: string;
    /**
     * 
     * @type {string}
     * @memberof CommonHTTPOption
     */
    password?: string;
    /**
     * 
     * @type {string}
     * @memberof CommonHTTPOption
     */
    username?: string;
}

/**
 * Check if a given object implements the CommonHTTPOption interface.
 */
export function instanceOfCommonHTTPOption(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CommonHTTPOptionFromJSON(json: any): CommonHTTPOption {
    return CommonHTTPOptionFromJSONTyped(json, false);
}

export function CommonHTTPOptionFromJSONTyped(json: any, ignoreDiscriminator: boolean): CommonHTTPOption {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'caFile': !exists(json, 'caFile') ? undefined : json['caFile'],
        'certFile': !exists(json, 'certFile') ? undefined : json['certFile'],
        'insecureSkipTLS': !exists(json, 'insecureSkipTLS') ? undefined : json['insecureSkipTLS'],
        'keyFile': !exists(json, 'keyFile') ? undefined : json['keyFile'],
        'password': !exists(json, 'password') ? undefined : json['password'],
        'username': !exists(json, 'username') ? undefined : json['username'],
    };
}

export function CommonHTTPOptionToJSON(value?: CommonHTTPOption | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'caFile': value.caFile,
        'certFile': value.certFile,
        'insecureSkipTLS': value.insecureSkipTLS,
        'keyFile': value.keyFile,
        'password': value.password,
        'username': value.username,
    };
}

