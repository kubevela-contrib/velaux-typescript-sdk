/* tslint:disable */
/* eslint-disable */
/**
 * Kubevela api doc
 * Kubevela api doc
 *
 * The version of the OpenAPI document: v1beta1
 * Contact: feedback@mail.kubevela.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ChartDependency
 */
export interface ChartDependency {
    /**
     * 
     * @type {string}
     * @memberof ChartDependency
     */
    alias?: string;
    /**
     * 
     * @type {string}
     * @memberof ChartDependency
     */
    condition?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ChartDependency
     */
    enabled?: boolean;
    /**
     * 
     * @type {Array<object>}
     * @memberof ChartDependency
     */
    importValues?: Array<object>;
    /**
     * 
     * @type {string}
     * @memberof ChartDependency
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof ChartDependency
     */
    repository: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof ChartDependency
     */
    tags?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof ChartDependency
     */
    version?: string;
}

/**
 * Check if a given object implements the ChartDependency interface.
 */
export function instanceOfChartDependency(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "repository" in value;

    return isInstance;
}

export function ChartDependencyFromJSON(json: any): ChartDependency {
    return ChartDependencyFromJSONTyped(json, false);
}

export function ChartDependencyFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChartDependency {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'alias': !exists(json, 'alias') ? undefined : json['alias'],
        'condition': !exists(json, 'condition') ? undefined : json['condition'],
        'enabled': !exists(json, 'enabled') ? undefined : json['enabled'],
        'importValues': !exists(json, 'import-values') ? undefined : json['import-values'],
        'name': json['name'],
        'repository': json['repository'],
        'tags': !exists(json, 'tags') ? undefined : json['tags'],
        'version': !exists(json, 'version') ? undefined : json['version'],
    };
}

export function ChartDependencyToJSON(value?: ChartDependency | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'alias': value.alias,
        'condition': value.condition,
        'enabled': value.enabled,
        'import-values': value.importValues,
        'name': value.name,
        'repository': value.repository,
        'tags': value.tags,
        'version': value.version,
    };
}

