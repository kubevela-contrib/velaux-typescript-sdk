/* tslint:disable */
/* eslint-disable */
/**
 * Kubevela api doc
 * Kubevela api doc
 *
 * The version of the OpenAPI document: v1beta1
 * Contact: feedback@mail.kubevela.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CommonWorkloadTypeDescriptor } from './CommonWorkloadTypeDescriptor';
import {
    CommonWorkloadTypeDescriptorFromJSON,
    CommonWorkloadTypeDescriptorFromJSONTyped,
    CommonWorkloadTypeDescriptorToJSON,
} from './CommonWorkloadTypeDescriptor';
import type { ModelApplicationTrait } from './ModelApplicationTrait';
import {
    ModelApplicationTraitFromJSON,
    ModelApplicationTraitFromJSONTyped,
    ModelApplicationTraitToJSON,
} from './ModelApplicationTrait';
import type { V1alpha1InputItem } from './V1alpha1InputItem';
import {
    V1alpha1InputItemFromJSON,
    V1alpha1InputItemFromJSONTyped,
    V1alpha1InputItemToJSON,
} from './V1alpha1InputItem';
import type { V1alpha1OutputItem } from './V1alpha1OutputItem';
import {
    V1alpha1OutputItemFromJSON,
    V1alpha1OutputItemFromJSONTyped,
    V1alpha1OutputItemToJSON,
} from './V1alpha1OutputItem';

/**
 * 
 * @export
 * @interface ModelApplicationComponent
 */
export interface ModelApplicationComponent {
    /**
     * 
     * @type {string}
     * @memberof ModelApplicationComponent
     */
    alias: string;
    /**
     * 
     * @type {string}
     * @memberof ModelApplicationComponent
     */
    appPrimaryKey: string;
    /**
     * 
     * @type {Date}
     * @memberof ModelApplicationComponent
     */
    createTime: Date;
    /**
     * 
     * @type {string}
     * @memberof ModelApplicationComponent
     */
    creator: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof ModelApplicationComponent
     */
    dependsOn?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof ModelApplicationComponent
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof ModelApplicationComponent
     */
    externalRevision?: string;
    /**
     * 
     * @type {string}
     * @memberof ModelApplicationComponent
     */
    icon?: string;
    /**
     * 
     * @type {Array<V1alpha1InputItem>}
     * @memberof ModelApplicationComponent
     */
    inputs?: Array<V1alpha1InputItem>;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof ModelApplicationComponent
     */
    labels?: { [key: string]: string; };
    /**
     * 
     * @type {boolean}
     * @memberof ModelApplicationComponent
     */
    main: boolean;
    /**
     * 
     * @type {string}
     * @memberof ModelApplicationComponent
     */
    name: string;
    /**
     * 
     * @type {Array<V1alpha1OutputItem>}
     * @memberof ModelApplicationComponent
     */
    outputs?: Array<V1alpha1OutputItem>;
    /**
     * 
     * @type {object}
     * @memberof ModelApplicationComponent
     */
    properties?: object;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof ModelApplicationComponent
     */
    scopes?: { [key: string]: string; };
    /**
     * 
     * @type {Array<ModelApplicationTrait>}
     * @memberof ModelApplicationComponent
     */
    traits?: Array<ModelApplicationTrait>;
    /**
     * 
     * @type {string}
     * @memberof ModelApplicationComponent
     */
    type: string;
    /**
     * 
     * @type {Date}
     * @memberof ModelApplicationComponent
     */
    updateTime: Date;
    /**
     * 
     * @type {CommonWorkloadTypeDescriptor}
     * @memberof ModelApplicationComponent
     */
    workloadType?: CommonWorkloadTypeDescriptor;
}

/**
 * Check if a given object implements the ModelApplicationComponent interface.
 */
export function instanceOfModelApplicationComponent(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "alias" in value;
    isInstance = isInstance && "appPrimaryKey" in value;
    isInstance = isInstance && "createTime" in value;
    isInstance = isInstance && "creator" in value;
    isInstance = isInstance && "main" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "updateTime" in value;

    return isInstance;
}

export function ModelApplicationComponentFromJSON(json: any): ModelApplicationComponent {
    return ModelApplicationComponentFromJSONTyped(json, false);
}

export function ModelApplicationComponentFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModelApplicationComponent {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'alias': json['alias'],
        'appPrimaryKey': json['appPrimaryKey'],
        'createTime': (new Date(json['createTime'])),
        'creator': json['creator'],
        'dependsOn': !exists(json, 'dependsOn') ? undefined : json['dependsOn'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'externalRevision': !exists(json, 'externalRevision') ? undefined : json['externalRevision'],
        'icon': !exists(json, 'icon') ? undefined : json['icon'],
        'inputs': !exists(json, 'inputs') ? undefined : ((json['inputs'] as Array<any>).map(V1alpha1InputItemFromJSON)),
        'labels': !exists(json, 'labels') ? undefined : json['labels'],
        'main': json['main'],
        'name': json['name'],
        'outputs': !exists(json, 'outputs') ? undefined : ((json['outputs'] as Array<any>).map(V1alpha1OutputItemFromJSON)),
        'properties': !exists(json, 'properties') ? undefined : json['properties'],
        'scopes': !exists(json, 'scopes') ? undefined : json['scopes'],
        'traits': !exists(json, 'traits') ? undefined : ((json['traits'] as Array<any>).map(ModelApplicationTraitFromJSON)),
        'type': json['type'],
        'updateTime': (new Date(json['updateTime'])),
        'workloadType': !exists(json, 'workloadType') ? undefined : CommonWorkloadTypeDescriptorFromJSON(json['workloadType']),
    };
}

export function ModelApplicationComponentToJSON(value?: ModelApplicationComponent | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'alias': value.alias,
        'appPrimaryKey': value.appPrimaryKey,
        'createTime': (value.createTime.toISOString()),
        'creator': value.creator,
        'dependsOn': value.dependsOn,
        'description': value.description,
        'externalRevision': value.externalRevision,
        'icon': value.icon,
        'inputs': value.inputs === undefined ? undefined : ((value.inputs as Array<any>).map(V1alpha1InputItemToJSON)),
        'labels': value.labels,
        'main': value.main,
        'name': value.name,
        'outputs': value.outputs === undefined ? undefined : ((value.outputs as Array<any>).map(V1alpha1OutputItemToJSON)),
        'properties': value.properties,
        'scopes': value.scopes,
        'traits': value.traits === undefined ? undefined : ((value.traits as Array<any>).map(ModelApplicationTraitToJSON)),
        'type': value.type,
        'updateTime': (value.updateTime.toISOString()),
        'workloadType': CommonWorkloadTypeDescriptorToJSON(value.workloadType),
    };
}

