/* tslint:disable */
/* eslint-disable */
/**
 * Kubevela api doc
 * Kubevela api doc
 *
 * The version of the OpenAPI document: v1beta1
 * Contact: feedback@mail.kubevela.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AddonGitAddonSource } from './AddonGitAddonSource';
import {
    AddonGitAddonSourceFromJSON,
    AddonGitAddonSourceFromJSONTyped,
    AddonGitAddonSourceToJSON,
} from './AddonGitAddonSource';
import type { AddonGiteeAddonSource } from './AddonGiteeAddonSource';
import {
    AddonGiteeAddonSourceFromJSON,
    AddonGiteeAddonSourceFromJSONTyped,
    AddonGiteeAddonSourceToJSON,
} from './AddonGiteeAddonSource';
import type { AddonGitlabAddonSource } from './AddonGitlabAddonSource';
import {
    AddonGitlabAddonSourceFromJSON,
    AddonGitlabAddonSourceFromJSONTyped,
    AddonGitlabAddonSourceToJSON,
} from './AddonGitlabAddonSource';
import type { AddonHelmSource } from './AddonHelmSource';
import {
    AddonHelmSourceFromJSON,
    AddonHelmSourceFromJSONTyped,
    AddonHelmSourceToJSON,
} from './AddonHelmSource';
import type { AddonOSSAddonSource } from './AddonOSSAddonSource';
import {
    AddonOSSAddonSourceFromJSON,
    AddonOSSAddonSourceFromJSONTyped,
    AddonOSSAddonSourceToJSON,
} from './AddonOSSAddonSource';

/**
 * 
 * @export
 * @interface V1UpdateAddonRegistryRequest
 */
export interface V1UpdateAddonRegistryRequest {
    /**
     * 
     * @type {AddonGitAddonSource}
     * @memberof V1UpdateAddonRegistryRequest
     */
    git?: AddonGitAddonSource;
    /**
     * 
     * @type {AddonGiteeAddonSource}
     * @memberof V1UpdateAddonRegistryRequest
     */
    gitee?: AddonGiteeAddonSource;
    /**
     * 
     * @type {AddonGitlabAddonSource}
     * @memberof V1UpdateAddonRegistryRequest
     */
    gitlab?: AddonGitlabAddonSource;
    /**
     * 
     * @type {AddonHelmSource}
     * @memberof V1UpdateAddonRegistryRequest
     */
    helm?: AddonHelmSource;
    /**
     * 
     * @type {AddonOSSAddonSource}
     * @memberof V1UpdateAddonRegistryRequest
     */
    oss?: AddonOSSAddonSource;
}

/**
 * Check if a given object implements the V1UpdateAddonRegistryRequest interface.
 */
export function instanceOfV1UpdateAddonRegistryRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function V1UpdateAddonRegistryRequestFromJSON(json: any): V1UpdateAddonRegistryRequest {
    return V1UpdateAddonRegistryRequestFromJSONTyped(json, false);
}

export function V1UpdateAddonRegistryRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1UpdateAddonRegistryRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'git': !exists(json, 'git') ? undefined : AddonGitAddonSourceFromJSON(json['git']),
        'gitee': !exists(json, 'gitee') ? undefined : AddonGiteeAddonSourceFromJSON(json['gitee']),
        'gitlab': !exists(json, 'gitlab') ? undefined : AddonGitlabAddonSourceFromJSON(json['gitlab']),
        'helm': !exists(json, 'helm') ? undefined : AddonHelmSourceFromJSON(json['helm']),
        'oss': !exists(json, 'oss') ? undefined : AddonOSSAddonSourceFromJSON(json['oss']),
    };
}

export function V1UpdateAddonRegistryRequestToJSON(value?: V1UpdateAddonRegistryRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'git': AddonGitAddonSourceToJSON(value.git),
        'gitee': AddonGiteeAddonSourceToJSON(value.gitee),
        'gitlab': AddonGitlabAddonSourceToJSON(value.gitlab),
        'helm': AddonHelmSourceToJSON(value.helm),
        'oss': AddonOSSAddonSourceToJSON(value.oss),
    };
}

