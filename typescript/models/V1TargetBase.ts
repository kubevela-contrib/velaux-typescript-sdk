/* tslint:disable */
/* eslint-disable */
/**
 * Kubevela api doc
 * Kubevela api doc
 *
 * The version of the OpenAPI document: v1beta1
 * Contact: feedback@mail.kubevela.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { V1ClusterTarget } from './V1ClusterTarget';
import {
    V1ClusterTargetFromJSON,
    V1ClusterTargetFromJSONTyped,
    V1ClusterTargetToJSON,
} from './V1ClusterTarget';
import type { V1NameAlias } from './V1NameAlias';
import {
    V1NameAliasFromJSON,
    V1NameAliasFromJSONTyped,
    V1NameAliasToJSON,
} from './V1NameAlias';

/**
 * 
 * @export
 * @interface V1TargetBase
 */
export interface V1TargetBase {
    /**
     * 
     * @type {string}
     * @memberof V1TargetBase
     */
    alias?: string;
    /**
     * 
     * @type {number}
     * @memberof V1TargetBase
     */
    appNum?: number;
    /**
     * 
     * @type {V1ClusterTarget}
     * @memberof V1TargetBase
     */
    cluster?: V1ClusterTarget;
    /**
     * 
     * @type {string}
     * @memberof V1TargetBase
     */
    clusterAlias?: string;
    /**
     * 
     * @type {Date}
     * @memberof V1TargetBase
     */
    createTime: Date;
    /**
     * 
     * @type {string}
     * @memberof V1TargetBase
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof V1TargetBase
     */
    name: string;
    /**
     * 
     * @type {V1NameAlias}
     * @memberof V1TargetBase
     */
    project: V1NameAlias;
    /**
     * 
     * @type {Date}
     * @memberof V1TargetBase
     */
    updateTime: Date;
    /**
     * 
     * @type {object}
     * @memberof V1TargetBase
     */
    variable?: object;
}

/**
 * Check if a given object implements the V1TargetBase interface.
 */
export function instanceOfV1TargetBase(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "createTime" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "project" in value;
    isInstance = isInstance && "updateTime" in value;

    return isInstance;
}

export function V1TargetBaseFromJSON(json: any): V1TargetBase {
    return V1TargetBaseFromJSONTyped(json, false);
}

export function V1TargetBaseFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1TargetBase {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'alias': !exists(json, 'alias') ? undefined : json['alias'],
        'appNum': !exists(json, 'appNum') ? undefined : json['appNum'],
        'cluster': !exists(json, 'cluster') ? undefined : V1ClusterTargetFromJSON(json['cluster']),
        'clusterAlias': !exists(json, 'clusterAlias') ? undefined : json['clusterAlias'],
        'createTime': (new Date(json['createTime'])),
        'description': !exists(json, 'description') ? undefined : json['description'],
        'name': json['name'],
        'project': V1NameAliasFromJSON(json['project']),
        'updateTime': (new Date(json['updateTime'])),
        'variable': !exists(json, 'variable') ? undefined : json['variable'],
    };
}

export function V1TargetBaseToJSON(value?: V1TargetBase | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'alias': value.alias,
        'appNum': value.appNum,
        'cluster': V1ClusterTargetToJSON(value.cluster),
        'clusterAlias': value.clusterAlias,
        'createTime': (value.createTime.toISOString()),
        'description': value.description,
        'name': value.name,
        'project': V1NameAliasToJSON(value.project),
        'updateTime': (value.updateTime.toISOString()),
        'variable': value.variable,
    };
}

