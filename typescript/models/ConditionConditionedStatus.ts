/* tslint:disable */
/* eslint-disable */
/**
 * Kubevela api doc
 * Kubevela api doc
 *
 * The version of the OpenAPI document: v1beta1
 * Contact: feedback@mail.kubevela.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ConditionCondition } from './ConditionCondition';
import {
    ConditionConditionFromJSON,
    ConditionConditionFromJSONTyped,
    ConditionConditionToJSON,
} from './ConditionCondition';

/**
 * 
 * @export
 * @interface ConditionConditionedStatus
 */
export interface ConditionConditionedStatus {
    /**
     * 
     * @type {Array<ConditionCondition>}
     * @memberof ConditionConditionedStatus
     */
    conditions?: Array<ConditionCondition>;
}

/**
 * Check if a given object implements the ConditionConditionedStatus interface.
 */
export function instanceOfConditionConditionedStatus(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ConditionConditionedStatusFromJSON(json: any): ConditionConditionedStatus {
    return ConditionConditionedStatusFromJSONTyped(json, false);
}

export function ConditionConditionedStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConditionConditionedStatus {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'conditions': !exists(json, 'conditions') ? undefined : ((json['conditions'] as Array<any>).map(ConditionConditionFromJSON)),
    };
}

export function ConditionConditionedStatusToJSON(value?: ConditionConditionedStatus | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'conditions': value.conditions === undefined ? undefined : ((value.conditions as Array<any>).map(ConditionConditionToJSON)),
    };
}

