/* tslint:disable */
/* eslint-disable */
/**
 * Kubevela api doc
 * Kubevela api doc
 *
 * The version of the OpenAPI document: v1beta1
 * Contact: feedback@mail.kubevela.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { V1CompareLatestWithRunningOption } from './V1CompareLatestWithRunningOption';
import {
    V1CompareLatestWithRunningOptionFromJSON,
    V1CompareLatestWithRunningOptionFromJSONTyped,
    V1CompareLatestWithRunningOptionToJSON,
} from './V1CompareLatestWithRunningOption';
import type { V1CompareRevisionWithLatestOption } from './V1CompareRevisionWithLatestOption';
import {
    V1CompareRevisionWithLatestOptionFromJSON,
    V1CompareRevisionWithLatestOptionFromJSONTyped,
    V1CompareRevisionWithLatestOptionToJSON,
} from './V1CompareRevisionWithLatestOption';
import type { V1CompareRevisionWithRunningOption } from './V1CompareRevisionWithRunningOption';
import {
    V1CompareRevisionWithRunningOptionFromJSON,
    V1CompareRevisionWithRunningOptionFromJSONTyped,
    V1CompareRevisionWithRunningOptionToJSON,
} from './V1CompareRevisionWithRunningOption';

/**
 * 
 * @export
 * @interface V1AppCompareReq
 */
export interface V1AppCompareReq {
    /**
     * 
     * @type {V1CompareLatestWithRunningOption}
     * @memberof V1AppCompareReq
     */
    compareLatestWithRunning?: V1CompareLatestWithRunningOption;
    /**
     * 
     * @type {V1CompareRevisionWithLatestOption}
     * @memberof V1AppCompareReq
     */
    compareRevisionWithLatest?: V1CompareRevisionWithLatestOption;
    /**
     * 
     * @type {V1CompareRevisionWithRunningOption}
     * @memberof V1AppCompareReq
     */
    compareRevisionWithRunning?: V1CompareRevisionWithRunningOption;
}

/**
 * Check if a given object implements the V1AppCompareReq interface.
 */
export function instanceOfV1AppCompareReq(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function V1AppCompareReqFromJSON(json: any): V1AppCompareReq {
    return V1AppCompareReqFromJSONTyped(json, false);
}

export function V1AppCompareReqFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1AppCompareReq {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'compareLatestWithRunning': !exists(json, 'compareLatestWithRunning') ? undefined : V1CompareLatestWithRunningOptionFromJSON(json['compareLatestWithRunning']),
        'compareRevisionWithLatest': !exists(json, 'compareRevisionWithLatest') ? undefined : V1CompareRevisionWithLatestOptionFromJSON(json['compareRevisionWithLatest']),
        'compareRevisionWithRunning': !exists(json, 'compareRevisionWithRunning') ? undefined : V1CompareRevisionWithRunningOptionFromJSON(json['compareRevisionWithRunning']),
    };
}

export function V1AppCompareReqToJSON(value?: V1AppCompareReq | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'compareLatestWithRunning': V1CompareLatestWithRunningOptionToJSON(value.compareLatestWithRunning),
        'compareRevisionWithLatest': V1CompareRevisionWithLatestOptionToJSON(value.compareRevisionWithLatest),
        'compareRevisionWithRunning': V1CompareRevisionWithRunningOptionToJSON(value.compareRevisionWithRunning),
    };
}

