/* tslint:disable */
/* eslint-disable */
/**
 * Kubevela api doc
 * Kubevela api doc
 *
 * The version of the OpenAPI document: v1beta1
 * Contact: feedback@mail.kubevela.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TypesReference } from './TypesReference';
import {
    TypesReferenceFromJSON,
    TypesReferenceFromJSONTyped,
    TypesReferenceToJSON,
} from './TypesReference';
import type { TypesSecretReference } from './TypesSecretReference';
import {
    TypesSecretReferenceFromJSON,
    TypesSecretReferenceFromJSONTyped,
    TypesSecretReferenceToJSON,
} from './TypesSecretReference';
import type { V1SecretReference } from './V1SecretReference';
import {
    V1SecretReferenceFromJSON,
    V1SecretReferenceFromJSONTyped,
    V1SecretReferenceToJSON,
} from './V1SecretReference';

/**
 * 
 * @export
 * @interface CommonTerraform
 */
export interface CommonTerraform {
    /**
     * 
     * @type {string}
     * @memberof CommonTerraform
     */
    _configuration: string;
    /**
     * 
     * @type {string}
     * @memberof CommonTerraform
     */
    customRegion?: string;
    /**
     * 
     * @type {boolean}
     * @memberof CommonTerraform
     */
    deleteResource?: boolean;
    /**
     * 
     * @type {V1SecretReference}
     * @memberof CommonTerraform
     */
    gitCredentialsSecretReference?: V1SecretReference;
    /**
     * 
     * @type {string}
     * @memberof CommonTerraform
     */
    path?: string;
    /**
     * 
     * @type {TypesReference}
     * @memberof CommonTerraform
     */
    providerRef?: TypesReference;
    /**
     * 
     * @type {string}
     * @memberof CommonTerraform
     */
    type?: string;
    /**
     * 
     * @type {TypesSecretReference}
     * @memberof CommonTerraform
     */
    writeConnectionSecretToRef?: TypesSecretReference;
}

/**
 * Check if a given object implements the CommonTerraform interface.
 */
export function instanceOfCommonTerraform(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "_configuration" in value;

    return isInstance;
}

export function CommonTerraformFromJSON(json: any): CommonTerraform {
    return CommonTerraformFromJSONTyped(json, false);
}

export function CommonTerraformFromJSONTyped(json: any, ignoreDiscriminator: boolean): CommonTerraform {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        '_configuration': json['configuration'],
        'customRegion': !exists(json, 'customRegion') ? undefined : json['customRegion'],
        'deleteResource': !exists(json, 'deleteResource') ? undefined : json['deleteResource'],
        'gitCredentialsSecretReference': !exists(json, 'gitCredentialsSecretReference') ? undefined : V1SecretReferenceFromJSON(json['gitCredentialsSecretReference']),
        'path': !exists(json, 'path') ? undefined : json['path'],
        'providerRef': !exists(json, 'providerRef') ? undefined : TypesReferenceFromJSON(json['providerRef']),
        'type': !exists(json, 'type') ? undefined : json['type'],
        'writeConnectionSecretToRef': !exists(json, 'writeConnectionSecretToRef') ? undefined : TypesSecretReferenceFromJSON(json['writeConnectionSecretToRef']),
    };
}

export function CommonTerraformToJSON(value?: CommonTerraform | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'configuration': value._configuration,
        'customRegion': value.customRegion,
        'deleteResource': value.deleteResource,
        'gitCredentialsSecretReference': V1SecretReferenceToJSON(value.gitCredentialsSecretReference),
        'path': value.path,
        'providerRef': TypesReferenceToJSON(value.providerRef),
        'type': value.type,
        'writeConnectionSecretToRef': TypesSecretReferenceToJSON(value.writeConnectionSecretToRef),
    };
}

