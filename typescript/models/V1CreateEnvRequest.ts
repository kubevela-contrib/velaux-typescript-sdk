/* tslint:disable */
/* eslint-disable */
/**
 * Kubevela api doc
 * Kubevela api doc
 *
 * The version of the OpenAPI document: v1beta1
 * Contact: feedback@mail.kubevela.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface V1CreateEnvRequest
 */
export interface V1CreateEnvRequest {
    /**
     * 
     * @type {string}
     * @memberof V1CreateEnvRequest
     */
    alias?: string;
    /**
     * 
     * @type {boolean}
     * @memberof V1CreateEnvRequest
     */
    allowTargetConflict?: boolean;
    /**
     * 
     * @type {string}
     * @memberof V1CreateEnvRequest
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof V1CreateEnvRequest
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof V1CreateEnvRequest
     */
    namespace: string;
    /**
     * 
     * @type {string}
     * @memberof V1CreateEnvRequest
     */
    project: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof V1CreateEnvRequest
     */
    targets?: Array<string>;
}

/**
 * Check if a given object implements the V1CreateEnvRequest interface.
 */
export function instanceOfV1CreateEnvRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "namespace" in value;
    isInstance = isInstance && "project" in value;

    return isInstance;
}

export function V1CreateEnvRequestFromJSON(json: any): V1CreateEnvRequest {
    return V1CreateEnvRequestFromJSONTyped(json, false);
}

export function V1CreateEnvRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1CreateEnvRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'alias': !exists(json, 'alias') ? undefined : json['alias'],
        'allowTargetConflict': !exists(json, 'allowTargetConflict') ? undefined : json['allowTargetConflict'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'name': json['name'],
        'namespace': json['namespace'],
        'project': json['project'],
        'targets': !exists(json, 'targets') ? undefined : json['targets'],
    };
}

export function V1CreateEnvRequestToJSON(value?: V1CreateEnvRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'alias': value.alias,
        'allowTargetConflict': value.allowTargetConflict,
        'description': value.description,
        'name': value.name,
        'namespace': value.namespace,
        'project': value.project,
        'targets': value.targets,
    };
}

