/* tslint:disable */
/* eslint-disable */
/**
 * Kubevela api doc
 * Kubevela api doc
 *
 * The version of the OpenAPI document: v1beta1
 * Contact: feedback@mail.kubevela.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { V1CreateComponentRequest } from './V1CreateComponentRequest';
import {
    V1CreateComponentRequestFromJSON,
    V1CreateComponentRequestFromJSONTyped,
    V1CreateComponentRequestToJSON,
} from './V1CreateComponentRequest';
import type { V1EnvBinding } from './V1EnvBinding';
import {
    V1EnvBindingFromJSON,
    V1EnvBindingFromJSONTyped,
    V1EnvBindingToJSON,
} from './V1EnvBinding';

/**
 * 
 * @export
 * @interface V1CreateApplicationRequest
 */
export interface V1CreateApplicationRequest {
    /**
     * 
     * @type {string}
     * @memberof V1CreateApplicationRequest
     */
    alias?: string;
    /**
     * 
     * @type {V1CreateComponentRequest}
     * @memberof V1CreateApplicationRequest
     */
    component: V1CreateComponentRequest;
    /**
     * 
     * @type {string}
     * @memberof V1CreateApplicationRequest
     */
    description?: string;
    /**
     * 
     * @type {Array<V1EnvBinding>}
     * @memberof V1CreateApplicationRequest
     */
    envBinding?: Array<V1EnvBinding>;
    /**
     * 
     * @type {string}
     * @memberof V1CreateApplicationRequest
     */
    icon: string;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof V1CreateApplicationRequest
     */
    labels?: { [key: string]: string; };
    /**
     * 
     * @type {string}
     * @memberof V1CreateApplicationRequest
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof V1CreateApplicationRequest
     */
    project: string;
}

/**
 * Check if a given object implements the V1CreateApplicationRequest interface.
 */
export function instanceOfV1CreateApplicationRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "component" in value;
    isInstance = isInstance && "icon" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "project" in value;

    return isInstance;
}

export function V1CreateApplicationRequestFromJSON(json: any): V1CreateApplicationRequest {
    return V1CreateApplicationRequestFromJSONTyped(json, false);
}

export function V1CreateApplicationRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1CreateApplicationRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'alias': !exists(json, 'alias') ? undefined : json['alias'],
        'component': V1CreateComponentRequestFromJSON(json['component']),
        'description': !exists(json, 'description') ? undefined : json['description'],
        'envBinding': !exists(json, 'envBinding') ? undefined : ((json['envBinding'] as Array<any>).map(V1EnvBindingFromJSON)),
        'icon': json['icon'],
        'labels': !exists(json, 'labels') ? undefined : json['labels'],
        'name': json['name'],
        'project': json['project'],
    };
}

export function V1CreateApplicationRequestToJSON(value?: V1CreateApplicationRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'alias': value.alias,
        'component': V1CreateComponentRequestToJSON(value.component),
        'description': value.description,
        'envBinding': value.envBinding === undefined ? undefined : ((value.envBinding as Array<any>).map(V1EnvBindingToJSON)),
        'icon': value.icon,
        'labels': value.labels,
        'name': value.name,
        'project': value.project,
    };
}

