/* tslint:disable */
/* eslint-disable */
/**
 * Kubevela api doc
 * Kubevela api doc
 *
 * The version of the OpenAPI document: v1beta1
 * Contact: feedback@mail.kubevela.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ModelProviderInfo
 */
export interface ModelProviderInfo {
    /**
     * 
     * @type {string}
     * @memberof ModelProviderInfo
     */
    clusterID: string;
    /**
     * 
     * @type {string}
     * @memberof ModelProviderInfo
     */
    clusterName?: string;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof ModelProviderInfo
     */
    labels: { [key: string]: string; };
    /**
     * 
     * @type {string}
     * @memberof ModelProviderInfo
     */
    provider: string;
    /**
     * 
     * @type {string}
     * @memberof ModelProviderInfo
     */
    regionID?: string;
    /**
     * 
     * @type {string}
     * @memberof ModelProviderInfo
     */
    vpcID?: string;
    /**
     * 
     * @type {string}
     * @memberof ModelProviderInfo
     */
    zone?: string;
    /**
     * 
     * @type {string}
     * @memberof ModelProviderInfo
     */
    zoneID?: string;
}

/**
 * Check if a given object implements the ModelProviderInfo interface.
 */
export function instanceOfModelProviderInfo(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "clusterID" in value;
    isInstance = isInstance && "labels" in value;
    isInstance = isInstance && "provider" in value;

    return isInstance;
}

export function ModelProviderInfoFromJSON(json: any): ModelProviderInfo {
    return ModelProviderInfoFromJSONTyped(json, false);
}

export function ModelProviderInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModelProviderInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'clusterID': json['clusterID'],
        'clusterName': !exists(json, 'clusterName') ? undefined : json['clusterName'],
        'labels': json['labels'],
        'provider': json['provider'],
        'regionID': !exists(json, 'regionID') ? undefined : json['regionID'],
        'vpcID': !exists(json, 'vpcID') ? undefined : json['vpcID'],
        'zone': !exists(json, 'zone') ? undefined : json['zone'],
        'zoneID': !exists(json, 'zoneID') ? undefined : json['zoneID'],
    };
}

export function ModelProviderInfoToJSON(value?: ModelProviderInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'clusterID': value.clusterID,
        'clusterName': value.clusterName,
        'labels': value.labels,
        'provider': value.provider,
        'regionID': value.regionID,
        'vpcID': value.vpcID,
        'zone': value.zone,
        'zoneID': value.zoneID,
    };
}

