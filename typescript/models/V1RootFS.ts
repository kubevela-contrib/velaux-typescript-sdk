/* tslint:disable */
/* eslint-disable */
/**
 * Kubevela api doc
 * Kubevela api doc
 *
 * The version of the OpenAPI document: v1beta1
 * Contact: feedback@mail.kubevela.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { V1Hash } from './V1Hash';
import {
    V1HashFromJSON,
    V1HashFromJSONTyped,
    V1HashToJSON,
} from './V1Hash';

/**
 * 
 * @export
 * @interface V1RootFS
 */
export interface V1RootFS {
    /**
     * 
     * @type {Array<V1Hash>}
     * @memberof V1RootFS
     */
    diffIds: Array<V1Hash>;
    /**
     * 
     * @type {string}
     * @memberof V1RootFS
     */
    type: string;
}

/**
 * Check if a given object implements the V1RootFS interface.
 */
export function instanceOfV1RootFS(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "diffIds" in value;
    isInstance = isInstance && "type" in value;

    return isInstance;
}

export function V1RootFSFromJSON(json: any): V1RootFS {
    return V1RootFSFromJSONTyped(json, false);
}

export function V1RootFSFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1RootFS {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'diffIds': ((json['diff_ids'] as Array<any>).map(V1HashFromJSON)),
        'type': json['type'],
    };
}

export function V1RootFSToJSON(value?: V1RootFS | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'diff_ids': ((value.diffIds as Array<any>).map(V1HashToJSON)),
        'type': value.type,
    };
}

