/* tslint:disable */
/* eslint-disable */
/**
 * Kubevela api doc
 * Kubevela api doc
 *
 * The version of the OpenAPI document: v1beta1
 * Contact: feedback@mail.kubevela.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TypesBuildInfo
 */
export interface TypesBuildInfo {
    /**
     * 
     * @type {string}
     * @memberof TypesBuildInfo
     */
    branch?: string;
    /**
     * 
     * @type {string}
     * @memberof TypesBuildInfo
     */
    hash?: string;
    /**
     * 
     * @type {string}
     * @memberof TypesBuildInfo
     */
    repo?: string;
    /**
     * 
     * @type {number}
     * @memberof TypesBuildInfo
     */
    time?: number;
}

/**
 * Check if a given object implements the TypesBuildInfo interface.
 */
export function instanceOfTypesBuildInfo(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TypesBuildInfoFromJSON(json: any): TypesBuildInfo {
    return TypesBuildInfoFromJSONTyped(json, false);
}

export function TypesBuildInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): TypesBuildInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'branch': !exists(json, 'branch') ? undefined : json['branch'],
        'hash': !exists(json, 'hash') ? undefined : json['hash'],
        'repo': !exists(json, 'repo') ? undefined : json['repo'],
        'time': !exists(json, 'time') ? undefined : json['time'],
    };
}

export function TypesBuildInfoToJSON(value?: TypesBuildInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'branch': value.branch,
        'hash': value.hash,
        'repo': value.repo,
        'time': value.time,
    };
}

