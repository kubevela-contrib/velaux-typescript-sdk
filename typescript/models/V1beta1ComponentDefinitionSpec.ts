/* tslint:disable */
/* eslint-disable */
/**
 * Kubevela api doc
 * Kubevela api doc
 *
 * The version of the OpenAPI document: v1beta1
 * Contact: feedback@mail.kubevela.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CommonChildResourceKind } from './CommonChildResourceKind';
import {
    CommonChildResourceKindFromJSON,
    CommonChildResourceKindFromJSONTyped,
    CommonChildResourceKindToJSON,
} from './CommonChildResourceKind';
import type { CommonSchematic } from './CommonSchematic';
import {
    CommonSchematicFromJSON,
    CommonSchematicFromJSONTyped,
    CommonSchematicToJSON,
} from './CommonSchematic';
import type { CommonStatus } from './CommonStatus';
import {
    CommonStatusFromJSON,
    CommonStatusFromJSONTyped,
    CommonStatusToJSON,
} from './CommonStatus';
import type { CommonWorkloadTypeDescriptor } from './CommonWorkloadTypeDescriptor';
import {
    CommonWorkloadTypeDescriptorFromJSON,
    CommonWorkloadTypeDescriptorFromJSONTyped,
    CommonWorkloadTypeDescriptorToJSON,
} from './CommonWorkloadTypeDescriptor';

/**
 * 
 * @export
 * @interface V1beta1ComponentDefinitionSpec
 */
export interface V1beta1ComponentDefinitionSpec {
    /**
     * 
     * @type {Array<CommonChildResourceKind>}
     * @memberof V1beta1ComponentDefinitionSpec
     */
    childResourceKinds?: Array<CommonChildResourceKind>;
    /**
     * 
     * @type {string}
     * @memberof V1beta1ComponentDefinitionSpec
     */
    extension?: string;
    /**
     * 
     * @type {string}
     * @memberof V1beta1ComponentDefinitionSpec
     */
    podSpecPath?: string;
    /**
     * 
     * @type {string}
     * @memberof V1beta1ComponentDefinitionSpec
     */
    revisionLabel?: string;
    /**
     * 
     * @type {CommonSchematic}
     * @memberof V1beta1ComponentDefinitionSpec
     */
    schematic?: CommonSchematic;
    /**
     * 
     * @type {CommonStatus}
     * @memberof V1beta1ComponentDefinitionSpec
     */
    status?: CommonStatus;
    /**
     * 
     * @type {CommonWorkloadTypeDescriptor}
     * @memberof V1beta1ComponentDefinitionSpec
     */
    workload: CommonWorkloadTypeDescriptor;
}

/**
 * Check if a given object implements the V1beta1ComponentDefinitionSpec interface.
 */
export function instanceOfV1beta1ComponentDefinitionSpec(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "workload" in value;

    return isInstance;
}

export function V1beta1ComponentDefinitionSpecFromJSON(json: any): V1beta1ComponentDefinitionSpec {
    return V1beta1ComponentDefinitionSpecFromJSONTyped(json, false);
}

export function V1beta1ComponentDefinitionSpecFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1beta1ComponentDefinitionSpec {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'childResourceKinds': !exists(json, 'childResourceKinds') ? undefined : ((json['childResourceKinds'] as Array<any>).map(CommonChildResourceKindFromJSON)),
        'extension': !exists(json, 'extension') ? undefined : json['extension'],
        'podSpecPath': !exists(json, 'podSpecPath') ? undefined : json['podSpecPath'],
        'revisionLabel': !exists(json, 'revisionLabel') ? undefined : json['revisionLabel'],
        'schematic': !exists(json, 'schematic') ? undefined : CommonSchematicFromJSON(json['schematic']),
        'status': !exists(json, 'status') ? undefined : CommonStatusFromJSON(json['status']),
        'workload': CommonWorkloadTypeDescriptorFromJSON(json['workload']),
    };
}

export function V1beta1ComponentDefinitionSpecToJSON(value?: V1beta1ComponentDefinitionSpec | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'childResourceKinds': value.childResourceKinds === undefined ? undefined : ((value.childResourceKinds as Array<any>).map(CommonChildResourceKindToJSON)),
        'extension': value.extension,
        'podSpecPath': value.podSpecPath,
        'revisionLabel': value.revisionLabel,
        'schematic': CommonSchematicToJSON(value.schematic),
        'status': CommonStatusToJSON(value.status),
        'workload': CommonWorkloadTypeDescriptorToJSON(value.workload),
    };
}

