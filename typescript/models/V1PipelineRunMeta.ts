/* tslint:disable */
/* eslint-disable */
/**
 * Kubevela api doc
 * Kubevela api doc
 *
 * The version of the OpenAPI document: v1beta1
 * Contact: feedback@mail.kubevela.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { V1NameAlias } from './V1NameAlias';
import {
    V1NameAliasFromJSON,
    V1NameAliasFromJSONTyped,
    V1NameAliasToJSON,
} from './V1NameAlias';

/**
 * 
 * @export
 * @interface V1PipelineRunMeta
 */
export interface V1PipelineRunMeta {
    /**
     * 
     * @type {string}
     * @memberof V1PipelineRunMeta
     */
    pipelineName: string;
    /**
     * 
     * @type {string}
     * @memberof V1PipelineRunMeta
     */
    pipelineRunName: string;
    /**
     * 
     * @type {V1NameAlias}
     * @memberof V1PipelineRunMeta
     */
    project: V1NameAlias;
}

/**
 * Check if a given object implements the V1PipelineRunMeta interface.
 */
export function instanceOfV1PipelineRunMeta(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "pipelineName" in value;
    isInstance = isInstance && "pipelineRunName" in value;
    isInstance = isInstance && "project" in value;

    return isInstance;
}

export function V1PipelineRunMetaFromJSON(json: any): V1PipelineRunMeta {
    return V1PipelineRunMetaFromJSONTyped(json, false);
}

export function V1PipelineRunMetaFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1PipelineRunMeta {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'pipelineName': json['pipelineName'],
        'pipelineRunName': json['pipelineRunName'],
        'project': V1NameAliasFromJSON(json['project']),
    };
}

export function V1PipelineRunMetaToJSON(value?: V1PipelineRunMeta | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'pipelineName': value.pipelineName,
        'pipelineRunName': value.pipelineRunName,
        'project': V1NameAliasToJSON(value.project),
    };
}

