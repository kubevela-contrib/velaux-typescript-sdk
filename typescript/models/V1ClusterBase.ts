/* tslint:disable */
/* eslint-disable */
/**
 * Kubevela api doc
 * Kubevela api doc
 *
 * The version of the OpenAPI document: v1beta1
 * Contact: feedback@mail.kubevela.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ModelProviderInfo } from './ModelProviderInfo';
import {
    ModelProviderInfoFromJSON,
    ModelProviderInfoFromJSONTyped,
    ModelProviderInfoToJSON,
} from './ModelProviderInfo';

/**
 * 
 * @export
 * @interface V1ClusterBase
 */
export interface V1ClusterBase {
    /**
     * 
     * @type {string}
     * @memberof V1ClusterBase
     */
    alias?: string;
    /**
     * 
     * @type {string}
     * @memberof V1ClusterBase
     */
    apiServerURL: string;
    /**
     * 
     * @type {string}
     * @memberof V1ClusterBase
     */
    dashboardURL: string;
    /**
     * 
     * @type {string}
     * @memberof V1ClusterBase
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof V1ClusterBase
     */
    icon?: string;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof V1ClusterBase
     */
    labels?: { [key: string]: string; };
    /**
     * 
     * @type {string}
     * @memberof V1ClusterBase
     */
    name: string;
    /**
     * 
     * @type {ModelProviderInfo}
     * @memberof V1ClusterBase
     */
    providerInfo: ModelProviderInfo;
    /**
     * 
     * @type {string}
     * @memberof V1ClusterBase
     */
    reason: string;
    /**
     * 
     * @type {string}
     * @memberof V1ClusterBase
     */
    status: string;
}

/**
 * Check if a given object implements the V1ClusterBase interface.
 */
export function instanceOfV1ClusterBase(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "apiServerURL" in value;
    isInstance = isInstance && "dashboardURL" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "providerInfo" in value;
    isInstance = isInstance && "reason" in value;
    isInstance = isInstance && "status" in value;

    return isInstance;
}

export function V1ClusterBaseFromJSON(json: any): V1ClusterBase {
    return V1ClusterBaseFromJSONTyped(json, false);
}

export function V1ClusterBaseFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1ClusterBase {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'alias': !exists(json, 'alias') ? undefined : json['alias'],
        'apiServerURL': json['apiServerURL'],
        'dashboardURL': json['dashboardURL'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'icon': !exists(json, 'icon') ? undefined : json['icon'],
        'labels': !exists(json, 'labels') ? undefined : json['labels'],
        'name': json['name'],
        'providerInfo': ModelProviderInfoFromJSON(json['providerInfo']),
        'reason': json['reason'],
        'status': json['status'],
    };
}

export function V1ClusterBaseToJSON(value?: V1ClusterBase | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'alias': value.alias,
        'apiServerURL': value.apiServerURL,
        'dashboardURL': value.dashboardURL,
        'description': value.description,
        'icon': value.icon,
        'labels': value.labels,
        'name': value.name,
        'providerInfo': ModelProviderInfoToJSON(value.providerInfo),
        'reason': value.reason,
        'status': value.status,
    };
}

