/* tslint:disable */
/* eslint-disable */
/**
 * Kubevela api doc
 * Kubevela api doc
 *
 * The version of the OpenAPI document: v1beta1
 * Contact: feedback@mail.kubevela.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CommonHTTPOption } from './CommonHTTPOption';
import {
    CommonHTTPOptionFromJSON,
    CommonHTTPOptionFromJSONTyped,
    CommonHTTPOptionToJSON,
} from './CommonHTTPOption';

/**
 * 
 * @export
 * @interface V1InstallPluginRequest
 */
export interface V1InstallPluginRequest {
    /**
     * 
     * @type {boolean}
     * @memberof V1InstallPluginRequest
     */
    disable?: boolean;
    /**
     * 
     * @type {CommonHTTPOption}
     * @memberof V1InstallPluginRequest
     */
    options?: CommonHTTPOption;
    /**
     * 
     * @type {string}
     * @memberof V1InstallPluginRequest
     */
    url: string;
}

/**
 * Check if a given object implements the V1InstallPluginRequest interface.
 */
export function instanceOfV1InstallPluginRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "url" in value;

    return isInstance;
}

export function V1InstallPluginRequestFromJSON(json: any): V1InstallPluginRequest {
    return V1InstallPluginRequestFromJSONTyped(json, false);
}

export function V1InstallPluginRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1InstallPluginRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'disable': !exists(json, 'disable') ? undefined : json['disable'],
        'options': !exists(json, 'options') ? undefined : CommonHTTPOptionFromJSON(json['options']),
        'url': json['url'],
    };
}

export function V1InstallPluginRequestToJSON(value?: V1InstallPluginRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'disable': value.disable,
        'options': CommonHTTPOptionToJSON(value.options),
        'url': value.url,
    };
}

