/* tslint:disable */
/* eslint-disable */
/**
 * Kubevela api doc
 * Kubevela api doc
 *
 * The version of the OpenAPI document: v1beta1
 * Contact: feedback@mail.kubevela.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ConfigNamespacedName } from './ConfigNamespacedName';
import {
    ConfigNamespacedNameFromJSON,
    ConfigNamespacedNameFromJSONTyped,
    ConfigNamespacedNameToJSON,
} from './ConfigNamespacedName';

/**
 * 
 * @export
 * @interface ConfigClusterTargetStatus
 */
export interface ConfigClusterTargetStatus {
    /**
     * 
     * @type {ConfigNamespacedName}
     * @memberof ConfigClusterTargetStatus
     */
    application: ConfigNamespacedName;
    /**
     * 
     * @type {string}
     * @memberof ConfigClusterTargetStatus
     */
    clusterName: string;
    /**
     * 
     * @type {string}
     * @memberof ConfigClusterTargetStatus
     */
    message: string;
    /**
     * 
     * @type {string}
     * @memberof ConfigClusterTargetStatus
     */
    namespace: string;
    /**
     * 
     * @type {string}
     * @memberof ConfigClusterTargetStatus
     */
    status: string;
}

/**
 * Check if a given object implements the ConfigClusterTargetStatus interface.
 */
export function instanceOfConfigClusterTargetStatus(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "application" in value;
    isInstance = isInstance && "clusterName" in value;
    isInstance = isInstance && "message" in value;
    isInstance = isInstance && "namespace" in value;
    isInstance = isInstance && "status" in value;

    return isInstance;
}

export function ConfigClusterTargetStatusFromJSON(json: any): ConfigClusterTargetStatus {
    return ConfigClusterTargetStatusFromJSONTyped(json, false);
}

export function ConfigClusterTargetStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConfigClusterTargetStatus {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'application': ConfigNamespacedNameFromJSON(json['application']),
        'clusterName': json['clusterName'],
        'message': json['message'],
        'namespace': json['namespace'],
        'status': json['status'],
    };
}

export function ConfigClusterTargetStatusToJSON(value?: ConfigClusterTargetStatus | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'application': ConfigNamespacedNameToJSON(value.application),
        'clusterName': value.clusterName,
        'message': value.message,
        'namespace': value.namespace,
        'status': value.status,
    };
}

