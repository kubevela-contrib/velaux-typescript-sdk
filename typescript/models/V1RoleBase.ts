/* tslint:disable */
/* eslint-disable */
/**
 * Kubevela api doc
 * Kubevela api doc
 *
 * The version of the OpenAPI document: v1beta1
 * Contact: feedback@mail.kubevela.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { V1NameAlias } from './V1NameAlias';
import {
    V1NameAliasFromJSON,
    V1NameAliasFromJSONTyped,
    V1NameAliasToJSON,
} from './V1NameAlias';

/**
 * 
 * @export
 * @interface V1RoleBase
 */
export interface V1RoleBase {
    /**
     * 
     * @type {string}
     * @memberof V1RoleBase
     */
    alias?: string;
    /**
     * 
     * @type {Date}
     * @memberof V1RoleBase
     */
    createTime: Date;
    /**
     * 
     * @type {string}
     * @memberof V1RoleBase
     */
    name: string;
    /**
     * 
     * @type {Array<V1NameAlias>}
     * @memberof V1RoleBase
     */
    permissions: Array<V1NameAlias>;
    /**
     * 
     * @type {Date}
     * @memberof V1RoleBase
     */
    updateTime: Date;
}

/**
 * Check if a given object implements the V1RoleBase interface.
 */
export function instanceOfV1RoleBase(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "createTime" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "permissions" in value;
    isInstance = isInstance && "updateTime" in value;

    return isInstance;
}

export function V1RoleBaseFromJSON(json: any): V1RoleBase {
    return V1RoleBaseFromJSONTyped(json, false);
}

export function V1RoleBaseFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1RoleBase {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'alias': !exists(json, 'alias') ? undefined : json['alias'],
        'createTime': (new Date(json['createTime'])),
        'name': json['name'],
        'permissions': ((json['permissions'] as Array<any>).map(V1NameAliasFromJSON)),
        'updateTime': (new Date(json['updateTime'])),
    };
}

export function V1RoleBaseToJSON(value?: V1RoleBase | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'alias': value.alias,
        'createTime': (value.createTime.toISOString()),
        'name': value.name,
        'permissions': ((value.permissions as Array<any>).map(V1NameAliasToJSON)),
        'updateTime': (value.updateTime.toISOString()),
    };
}

