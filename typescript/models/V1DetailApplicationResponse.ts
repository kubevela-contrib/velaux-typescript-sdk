/* tslint:disable */
/* eslint-disable */
/**
 * Kubevela api doc
 * Kubevela api doc
 *
 * The version of the OpenAPI document: v1beta1
 * Contact: feedback@mail.kubevela.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { V1ApplicationResourceInfo } from './V1ApplicationResourceInfo';
import {
    V1ApplicationResourceInfoFromJSON,
    V1ApplicationResourceInfoFromJSONTyped,
    V1ApplicationResourceInfoToJSON,
} from './V1ApplicationResourceInfo';
import type { V1ProjectBase } from './V1ProjectBase';
import {
    V1ProjectBaseFromJSON,
    V1ProjectBaseFromJSONTyped,
    V1ProjectBaseToJSON,
} from './V1ProjectBase';

/**
 * 
 * @export
 * @interface V1DetailApplicationResponse
 */
export interface V1DetailApplicationResponse {
    /**
     * 
     * @type {string}
     * @memberof V1DetailApplicationResponse
     */
    alias: string;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof V1DetailApplicationResponse
     */
    annotations?: { [key: string]: string; };
    /**
     * 
     * @type {Date}
     * @memberof V1DetailApplicationResponse
     */
    createTime: Date;
    /**
     * 
     * @type {string}
     * @memberof V1DetailApplicationResponse
     */
    description: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof V1DetailApplicationResponse
     */
    envBindings: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof V1DetailApplicationResponse
     */
    icon: string;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof V1DetailApplicationResponse
     */
    labels?: { [key: string]: string; };
    /**
     * 
     * @type {string}
     * @memberof V1DetailApplicationResponse
     */
    name: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof V1DetailApplicationResponse
     */
    policies: Array<string>;
    /**
     * 
     * @type {V1ProjectBase}
     * @memberof V1DetailApplicationResponse
     */
    project: V1ProjectBase;
    /**
     * 
     * @type {boolean}
     * @memberof V1DetailApplicationResponse
     */
    readOnly?: boolean;
    /**
     * 
     * @type {V1ApplicationResourceInfo}
     * @memberof V1DetailApplicationResponse
     */
    resourceInfo: V1ApplicationResourceInfo;
    /**
     * 
     * @type {Date}
     * @memberof V1DetailApplicationResponse
     */
    updateTime: Date;
}

/**
 * Check if a given object implements the V1DetailApplicationResponse interface.
 */
export function instanceOfV1DetailApplicationResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "alias" in value;
    isInstance = isInstance && "createTime" in value;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "envBindings" in value;
    isInstance = isInstance && "icon" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "policies" in value;
    isInstance = isInstance && "project" in value;
    isInstance = isInstance && "resourceInfo" in value;
    isInstance = isInstance && "updateTime" in value;

    return isInstance;
}

export function V1DetailApplicationResponseFromJSON(json: any): V1DetailApplicationResponse {
    return V1DetailApplicationResponseFromJSONTyped(json, false);
}

export function V1DetailApplicationResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1DetailApplicationResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'alias': json['alias'],
        'annotations': !exists(json, 'annotations') ? undefined : json['annotations'],
        'createTime': (new Date(json['createTime'])),
        'description': json['description'],
        'envBindings': json['envBindings'],
        'icon': json['icon'],
        'labels': !exists(json, 'labels') ? undefined : json['labels'],
        'name': json['name'],
        'policies': json['policies'],
        'project': V1ProjectBaseFromJSON(json['project']),
        'readOnly': !exists(json, 'readOnly') ? undefined : json['readOnly'],
        'resourceInfo': V1ApplicationResourceInfoFromJSON(json['resourceInfo']),
        'updateTime': (new Date(json['updateTime'])),
    };
}

export function V1DetailApplicationResponseToJSON(value?: V1DetailApplicationResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'alias': value.alias,
        'annotations': value.annotations,
        'createTime': (value.createTime.toISOString()),
        'description': value.description,
        'envBindings': value.envBindings,
        'icon': value.icon,
        'labels': value.labels,
        'name': value.name,
        'policies': value.policies,
        'project': V1ProjectBaseToJSON(value.project),
        'readOnly': value.readOnly,
        'resourceInfo': V1ApplicationResourceInfoToJSON(value.resourceInfo),
        'updateTime': (value.updateTime.toISOString()),
    };
}

