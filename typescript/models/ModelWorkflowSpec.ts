/* tslint:disable */
/* eslint-disable */
/**
 * Kubevela api doc
 * Kubevela api doc
 *
 * The version of the OpenAPI document: v1beta1
 * Contact: feedback@mail.kubevela.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ModelWorkflowStep } from './ModelWorkflowStep';
import {
    ModelWorkflowStepFromJSON,
    ModelWorkflowStepFromJSONTyped,
    ModelWorkflowStepToJSON,
} from './ModelWorkflowStep';
import type { V1alpha1WorkflowExecuteMode } from './V1alpha1WorkflowExecuteMode';
import {
    V1alpha1WorkflowExecuteModeFromJSON,
    V1alpha1WorkflowExecuteModeFromJSONTyped,
    V1alpha1WorkflowExecuteModeToJSON,
} from './V1alpha1WorkflowExecuteMode';

/**
 * 
 * @export
 * @interface ModelWorkflowSpec
 */
export interface ModelWorkflowSpec {
    /**
     * 
     * @type {V1alpha1WorkflowExecuteMode}
     * @memberof ModelWorkflowSpec
     */
    mode?: V1alpha1WorkflowExecuteMode;
    /**
     * 
     * @type {Array<ModelWorkflowStep>}
     * @memberof ModelWorkflowSpec
     */
    steps?: Array<ModelWorkflowStep>;
}

/**
 * Check if a given object implements the ModelWorkflowSpec interface.
 */
export function instanceOfModelWorkflowSpec(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ModelWorkflowSpecFromJSON(json: any): ModelWorkflowSpec {
    return ModelWorkflowSpecFromJSONTyped(json, false);
}

export function ModelWorkflowSpecFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModelWorkflowSpec {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'mode': !exists(json, 'mode') ? undefined : V1alpha1WorkflowExecuteModeFromJSON(json['mode']),
        'steps': !exists(json, 'steps') ? undefined : ((json['steps'] as Array<any>).map(ModelWorkflowStepFromJSON)),
    };
}

export function ModelWorkflowSpecToJSON(value?: ModelWorkflowSpec | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'mode': V1alpha1WorkflowExecuteModeToJSON(value.mode),
        'steps': value.steps === undefined ? undefined : ((value.steps as Array<any>).map(ModelWorkflowStepToJSON)),
    };
}

