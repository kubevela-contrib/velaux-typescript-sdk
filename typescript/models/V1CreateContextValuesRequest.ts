/* tslint:disable */
/* eslint-disable */
/**
 * Kubevela api doc
 * Kubevela api doc
 *
 * The version of the OpenAPI document: v1beta1
 * Contact: feedback@mail.kubevela.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ModelValue } from './ModelValue';
import {
    ModelValueFromJSON,
    ModelValueFromJSONTyped,
    ModelValueToJSON,
} from './ModelValue';

/**
 * 
 * @export
 * @interface V1CreateContextValuesRequest
 */
export interface V1CreateContextValuesRequest {
    /**
     * 
     * @type {string}
     * @memberof V1CreateContextValuesRequest
     */
    name: string;
    /**
     * 
     * @type {Array<ModelValue>}
     * @memberof V1CreateContextValuesRequest
     */
    values: Array<ModelValue>;
}

/**
 * Check if a given object implements the V1CreateContextValuesRequest interface.
 */
export function instanceOfV1CreateContextValuesRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "values" in value;

    return isInstance;
}

export function V1CreateContextValuesRequestFromJSON(json: any): V1CreateContextValuesRequest {
    return V1CreateContextValuesRequestFromJSONTyped(json, false);
}

export function V1CreateContextValuesRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1CreateContextValuesRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'values': ((json['values'] as Array<any>).map(ModelValueFromJSON)),
    };
}

export function V1CreateContextValuesRequestToJSON(value?: V1CreateContextValuesRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'values': ((value.values as Array<any>).map(ModelValueToJSON)),
    };
}

