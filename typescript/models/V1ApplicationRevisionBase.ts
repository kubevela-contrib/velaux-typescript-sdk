/* tslint:disable */
/* eslint-disable */
/**
 * Kubevela api doc
 * Kubevela api doc
 *
 * The version of the OpenAPI document: v1beta1
 * Contact: feedback@mail.kubevela.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ModelCodeInfo } from './ModelCodeInfo';
import {
    ModelCodeInfoFromJSON,
    ModelCodeInfoFromJSONTyped,
    ModelCodeInfoToJSON,
} from './ModelCodeInfo';
import type { ModelImageInfo } from './ModelImageInfo';
import {
    ModelImageInfoFromJSON,
    ModelImageInfoFromJSONTyped,
    ModelImageInfoToJSON,
} from './ModelImageInfo';
import type { V1NameAlias } from './V1NameAlias';
import {
    V1NameAliasFromJSON,
    V1NameAliasFromJSONTyped,
    V1NameAliasToJSON,
} from './V1NameAlias';

/**
 * 
 * @export
 * @interface V1ApplicationRevisionBase
 */
export interface V1ApplicationRevisionBase {
    /**
     * 
     * @type {ModelCodeInfo}
     * @memberof V1ApplicationRevisionBase
     */
    codeInfo?: ModelCodeInfo;
    /**
     * 
     * @type {Date}
     * @memberof V1ApplicationRevisionBase
     */
    createTime: Date;
    /**
     * 
     * @type {V1NameAlias}
     * @memberof V1ApplicationRevisionBase
     */
    deployUser?: V1NameAlias;
    /**
     * 
     * @type {string}
     * @memberof V1ApplicationRevisionBase
     */
    envName: string;
    /**
     * 
     * @type {ModelImageInfo}
     * @memberof V1ApplicationRevisionBase
     */
    imageInfo?: ModelImageInfo;
    /**
     * 
     * @type {string}
     * @memberof V1ApplicationRevisionBase
     */
    note: string;
    /**
     * 
     * @type {string}
     * @memberof V1ApplicationRevisionBase
     */
    reason?: string;
    /**
     * 
     * @type {string}
     * @memberof V1ApplicationRevisionBase
     */
    status: string;
    /**
     * 
     * @type {string}
     * @memberof V1ApplicationRevisionBase
     */
    triggerType: string;
    /**
     * 
     * @type {string}
     * @memberof V1ApplicationRevisionBase
     */
    version: string;
    /**
     * 
     * @type {string}
     * @memberof V1ApplicationRevisionBase
     */
    workflowName: string;
}

/**
 * Check if a given object implements the V1ApplicationRevisionBase interface.
 */
export function instanceOfV1ApplicationRevisionBase(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "createTime" in value;
    isInstance = isInstance && "envName" in value;
    isInstance = isInstance && "note" in value;
    isInstance = isInstance && "status" in value;
    isInstance = isInstance && "triggerType" in value;
    isInstance = isInstance && "version" in value;
    isInstance = isInstance && "workflowName" in value;

    return isInstance;
}

export function V1ApplicationRevisionBaseFromJSON(json: any): V1ApplicationRevisionBase {
    return V1ApplicationRevisionBaseFromJSONTyped(json, false);
}

export function V1ApplicationRevisionBaseFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1ApplicationRevisionBase {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'codeInfo': !exists(json, 'codeInfo') ? undefined : ModelCodeInfoFromJSON(json['codeInfo']),
        'createTime': (new Date(json['createTime'])),
        'deployUser': !exists(json, 'deployUser') ? undefined : V1NameAliasFromJSON(json['deployUser']),
        'envName': json['envName'],
        'imageInfo': !exists(json, 'imageInfo') ? undefined : ModelImageInfoFromJSON(json['imageInfo']),
        'note': json['note'],
        'reason': !exists(json, 'reason') ? undefined : json['reason'],
        'status': json['status'],
        'triggerType': json['triggerType'],
        'version': json['version'],
        'workflowName': json['workflowName'],
    };
}

export function V1ApplicationRevisionBaseToJSON(value?: V1ApplicationRevisionBase | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'codeInfo': ModelCodeInfoToJSON(value.codeInfo),
        'createTime': (value.createTime.toISOString()),
        'deployUser': V1NameAliasToJSON(value.deployUser),
        'envName': value.envName,
        'imageInfo': ModelImageInfoToJSON(value.imageInfo),
        'note': value.note,
        'reason': value.reason,
        'status': value.status,
        'triggerType': value.triggerType,
        'version': value.version,
        'workflowName': value.workflowName,
    };
}

