/* tslint:disable */
/* eslint-disable */
/**
 * Kubevela api doc
 * Kubevela api doc
 *
 * The version of the OpenAPI document: v1beta1
 * Contact: feedback@mail.kubevela.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CommonApplicationComponent } from './CommonApplicationComponent';
import {
    CommonApplicationComponentFromJSON,
    CommonApplicationComponentFromJSONTyped,
    CommonApplicationComponentToJSON,
} from './CommonApplicationComponent';
import type { V1beta1AppPolicy } from './V1beta1AppPolicy';
import {
    V1beta1AppPolicyFromJSON,
    V1beta1AppPolicyFromJSONTyped,
    V1beta1AppPolicyToJSON,
} from './V1beta1AppPolicy';
import type { V1beta1Workflow } from './V1beta1Workflow';
import {
    V1beta1WorkflowFromJSON,
    V1beta1WorkflowFromJSONTyped,
    V1beta1WorkflowToJSON,
} from './V1beta1Workflow';

/**
 * 
 * @export
 * @interface V1beta1ApplicationSpec
 */
export interface V1beta1ApplicationSpec {
    /**
     * 
     * @type {Array<CommonApplicationComponent>}
     * @memberof V1beta1ApplicationSpec
     */
    components: Array<CommonApplicationComponent>;
    /**
     * 
     * @type {Array<V1beta1AppPolicy>}
     * @memberof V1beta1ApplicationSpec
     */
    policies?: Array<V1beta1AppPolicy>;
    /**
     * 
     * @type {V1beta1Workflow}
     * @memberof V1beta1ApplicationSpec
     */
    workflow?: V1beta1Workflow;
}

/**
 * Check if a given object implements the V1beta1ApplicationSpec interface.
 */
export function instanceOfV1beta1ApplicationSpec(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "components" in value;

    return isInstance;
}

export function V1beta1ApplicationSpecFromJSON(json: any): V1beta1ApplicationSpec {
    return V1beta1ApplicationSpecFromJSONTyped(json, false);
}

export function V1beta1ApplicationSpecFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1beta1ApplicationSpec {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'components': ((json['components'] as Array<any>).map(CommonApplicationComponentFromJSON)),
        'policies': !exists(json, 'policies') ? undefined : ((json['policies'] as Array<any>).map(V1beta1AppPolicyFromJSON)),
        'workflow': !exists(json, 'workflow') ? undefined : V1beta1WorkflowFromJSON(json['workflow']),
    };
}

export function V1beta1ApplicationSpecToJSON(value?: V1beta1ApplicationSpec | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'components': ((value.components as Array<any>).map(CommonApplicationComponentToJSON)),
        'policies': value.policies === undefined ? undefined : ((value.policies as Array<any>).map(V1beta1AppPolicyToJSON)),
        'workflow': V1beta1WorkflowToJSON(value.workflow),
    };
}

