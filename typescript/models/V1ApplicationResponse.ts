/* tslint:disable */
/* eslint-disable */
/**
 * Kubevela api doc
 * Kubevela api doc
 *
 * The version of the OpenAPI document: v1beta1
 * Contact: feedback@mail.kubevela.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CommonAppStatus } from './CommonAppStatus';
import {
    CommonAppStatusFromJSON,
    CommonAppStatusFromJSONTyped,
    CommonAppStatusToJSON,
} from './CommonAppStatus';
import type { V1beta1ApplicationSpec } from './V1beta1ApplicationSpec';
import {
    V1beta1ApplicationSpecFromJSON,
    V1beta1ApplicationSpecFromJSONTyped,
    V1beta1ApplicationSpecToJSON,
} from './V1beta1ApplicationSpec';

/**
 * 
 * @export
 * @interface V1ApplicationResponse
 */
export interface V1ApplicationResponse {
    /**
     * 
     * @type {string}
     * @memberof V1ApplicationResponse
     */
    apiVersion: string;
    /**
     * 
     * @type {string}
     * @memberof V1ApplicationResponse
     */
    kind: string;
    /**
     * 
     * @type {V1beta1ApplicationSpec}
     * @memberof V1ApplicationResponse
     */
    spec: V1beta1ApplicationSpec;
    /**
     * 
     * @type {CommonAppStatus}
     * @memberof V1ApplicationResponse
     */
    status: CommonAppStatus;
}

/**
 * Check if a given object implements the V1ApplicationResponse interface.
 */
export function instanceOfV1ApplicationResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "apiVersion" in value;
    isInstance = isInstance && "kind" in value;
    isInstance = isInstance && "spec" in value;
    isInstance = isInstance && "status" in value;

    return isInstance;
}

export function V1ApplicationResponseFromJSON(json: any): V1ApplicationResponse {
    return V1ApplicationResponseFromJSONTyped(json, false);
}

export function V1ApplicationResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1ApplicationResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'apiVersion': json['apiVersion'],
        'kind': json['kind'],
        'spec': V1beta1ApplicationSpecFromJSON(json['spec']),
        'status': CommonAppStatusFromJSON(json['status']),
    };
}

export function V1ApplicationResponseToJSON(value?: V1ApplicationResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'apiVersion': value.apiVersion,
        'kind': value.kind,
        'spec': V1beta1ApplicationSpecToJSON(value.spec),
        'status': CommonAppStatusToJSON(value.status),
    };
}

