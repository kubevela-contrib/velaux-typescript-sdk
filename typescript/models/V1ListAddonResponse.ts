/* tslint:disable */
/* eslint-disable */
/**
 * Kubevela api doc
 * Kubevela api doc
 *
 * The version of the OpenAPI document: v1beta1
 * Contact: feedback@mail.kubevela.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { V1AddonInfo } from './V1AddonInfo';
import {
    V1AddonInfoFromJSON,
    V1AddonInfoFromJSONTyped,
    V1AddonInfoToJSON,
} from './V1AddonInfo';

/**
 * 
 * @export
 * @interface V1ListAddonResponse
 */
export interface V1ListAddonResponse {
    /**
     * 
     * @type {Array<V1AddonInfo>}
     * @memberof V1ListAddonResponse
     */
    addons: Array<V1AddonInfo>;
    /**
     * 
     * @type {string}
     * @memberof V1ListAddonResponse
     */
    message?: string;
}

/**
 * Check if a given object implements the V1ListAddonResponse interface.
 */
export function instanceOfV1ListAddonResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "addons" in value;

    return isInstance;
}

export function V1ListAddonResponseFromJSON(json: any): V1ListAddonResponse {
    return V1ListAddonResponseFromJSONTyped(json, false);
}

export function V1ListAddonResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1ListAddonResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'addons': ((json['addons'] as Array<any>).map(V1AddonInfoFromJSON)),
        'message': !exists(json, 'message') ? undefined : json['message'],
    };
}

export function V1ListAddonResponseToJSON(value?: V1ListAddonResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'addons': ((value.addons as Array<any>).map(V1AddonInfoToJSON)),
        'message': value.message,
    };
}

