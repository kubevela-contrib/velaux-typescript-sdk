/* tslint:disable */
/* eslint-disable */
/**
 * Kubevela api doc
 * Kubevela api doc
 *
 * The version of the OpenAPI document: v1beta1
 * Contact: feedback@mail.kubevela.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { V1alpha1WorkflowExecuteMode } from './V1alpha1WorkflowExecuteMode';
import {
    V1alpha1WorkflowExecuteModeFromJSON,
    V1alpha1WorkflowExecuteModeFromJSONTyped,
    V1alpha1WorkflowExecuteModeToJSON,
} from './V1alpha1WorkflowExecuteMode';
import type { V1alpha1WorkflowSpec } from './V1alpha1WorkflowSpec';
import {
    V1alpha1WorkflowSpecFromJSON,
    V1alpha1WorkflowSpecFromJSONTyped,
    V1alpha1WorkflowSpecToJSON,
} from './V1alpha1WorkflowSpec';

/**
 * 
 * @export
 * @interface V1alpha1WorkflowRunSpec
 */
export interface V1alpha1WorkflowRunSpec {
    /**
     * 
     * @type {string}
     * @memberof V1alpha1WorkflowRunSpec
     */
    context?: string;
    /**
     * 
     * @type {V1alpha1WorkflowExecuteMode}
     * @memberof V1alpha1WorkflowRunSpec
     */
    mode?: V1alpha1WorkflowExecuteMode;
    /**
     * 
     * @type {string}
     * @memberof V1alpha1WorkflowRunSpec
     */
    workflowRef?: string;
    /**
     * 
     * @type {V1alpha1WorkflowSpec}
     * @memberof V1alpha1WorkflowRunSpec
     */
    workflowSpec?: V1alpha1WorkflowSpec;
}

/**
 * Check if a given object implements the V1alpha1WorkflowRunSpec interface.
 */
export function instanceOfV1alpha1WorkflowRunSpec(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function V1alpha1WorkflowRunSpecFromJSON(json: any): V1alpha1WorkflowRunSpec {
    return V1alpha1WorkflowRunSpecFromJSONTyped(json, false);
}

export function V1alpha1WorkflowRunSpecFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1alpha1WorkflowRunSpec {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'context': !exists(json, 'context') ? undefined : json['context'],
        'mode': !exists(json, 'mode') ? undefined : V1alpha1WorkflowExecuteModeFromJSON(json['mode']),
        'workflowRef': !exists(json, 'workflowRef') ? undefined : json['workflowRef'],
        'workflowSpec': !exists(json, 'workflowSpec') ? undefined : V1alpha1WorkflowSpecFromJSON(json['workflowSpec']),
    };
}

export function V1alpha1WorkflowRunSpecToJSON(value?: V1alpha1WorkflowRunSpec | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'context': value.context,
        'mode': V1alpha1WorkflowExecuteModeToJSON(value.mode),
        'workflowRef': value.workflowRef,
        'workflowSpec': V1alpha1WorkflowSpecToJSON(value.workflowSpec),
    };
}

